%TrainCode V1.2---New With Sounds 
%Opening Statements
delete(timerfindall);
clear all;
close all;
delete(instrfindall);
clc;
format compact;
 


%-------Initial Operating Conditions-------
continueRunning = 1; 
trainPosition = 'unknown';
blinker = 1;
blinkSeconds = 0;
[f,Fs]=audioread('RRCrosing.wav');
[f1,Fs]=audioread('TrainHorn.wav');
[f2,Fs]=audioread('TrainHorn2.wav');
player = audioplayer(f,Fs);
player2 = audioplayer(f1,Fs);
player3 = audioplayer(f2,Fs);



% Connect to Arduino board (or simulator)
a=arduino('COM3');   %arduino_sim() if using simulator, else arduino()
a.pinMode(15, 'output');
a.pinMode(14, 'output');
a.pinMode(6,'output');
a.pinMode(7,'output');
a.pinMode(8,'output');
a.pinMode(9,'output');

goLED=9; %Green Out LED
roLED=8; %Red Out LED
giLED=7; %Green In LED
riLED=6; %Red In LED

rrLEDright=14;
rrLEDleft=15;
a.servoAttach(1);
% a.servoStatus;
a.servoWrite(1,78); %vertical


%naming constants for use in subsequent function calls.
approach =3; departure = 2;        % Arduino port #'s for the gates


%----------------------Tuning variables. Experiment for best performance----------------------------------------
positiveThreshold = 350;               %Adjust this to change the minimum sensor value required to declare a positive result 
speedSlow = 140;%Previous 128 - 170
debug=0;

%-------User Time Input-----
inputTime = input('How many minutes would you like to run this for?')*60;

%-------Start Train-------
tzeroTimer=tic;
a.motorRun(1,'forward');
a.motorSpeed(1, 255);
%-------Governing Loop-------
while toc(tzeroTimer)<inputTime
    %       interogate sensors  
    approachVal=a.analogRead(approach);
    departureVal=a.analogRead(departure);
    
        
       switch trainPosition
       case 'approach'
           
           % change sensorlights
           if toc(approachTimer) > 0.5 && toc(approachTimer) < 0.6
                a.digitalWrite(giLED,0);
                a.digitalWrite(riLED,1);
                a.digitalWrite(roLED,0);
                a.digitalWrite(goLED,1);
                
           end
           
           %control flashing interval for rr lights
            if toc(approachTimer)>blinkSeconds +.4
                blinker = ~blinker;
                blinkSeconds = blinkSeconds +.4;
            end
            
            if debug == 1;
           disp(toc(approachTimer))
            end
            
            %start rr crossing lights
             if toc(approachTimer) < 3.5 
                 
                if blinker == 1
                a.digitalWrite(rrLEDright,1);
                a.digitalWrite(rrLEDleft,0); 
                elseif blinker == 0
                a.digitalWrite(rrLEDright,0);
                a.digitalWrite(rrLEDleft,1);
                end   
            else
                %stop rr lights
                a.digitalWrite(rrLEDright,0);
                a.digitalWrite(rrLEDleft,0); 
                 blinkSeconds = 0;
             end
          
            
            %lower crossing guard
            if toc(approachTimer) >1.5 && toc(approachTimer) <2.0
                play(player2);
                a.servoWrite(1,170); %horizontal
                
            elseif toc(approachTimer) > 3.6
                stop(player);
                stop(player2);
                stop(player3);
                a.servoWrite(1,78);%vertical
                a.motorSpeed(1,90);%Slow train for a stop
            end
            
            %stop at the station
            if toc(approachTimer) >=5.4 && toc(approachTimer) < 9
                a.motorSpeed(1, 0);
            elseif toc(approachTimer) > 10   %leave station
                a.motorSpeed(1, 150);
                play(player3);
            end
            
            %If train passes through the departure gate...
            if departureVal > positiveThreshold                
                trainPosition = 'departure';  %change to departure case
                departTimer = tic;
                
                if debug == 1
                fprintf('%s\t%7.4f\n', trainPosition, toc(tzeroTimer));
                end
                
                a.motorSpeed(1, 255);  %full steam ahead
                

            end 
            
        case 'departure'
            
           % change sensorlights
           if toc(departTimer) > 0.5 && toc(departTimer) < 0.6
                a.digitalWrite(giLED,1);
                a.digitalWrite(riLED,0);
                a.digitalWrite(roLED,1);
                a.digitalWrite(goLED,0);
           end
            
            
            %If train passes through the approach gate...
            if approachVal > positiveThreshold
                trainPosition = 'approach';
                 if debug == 1;
                     fprintf('%s\t%7.4f\n', trainPosition, toc(tzeroTimer));
            end
                
                  a.motorSpeed(1, speedSlow);
                  approachTimer=tic;
                  
                 

                play(player);
            end
            
            %end case departure
            
            
        case 'unknown'
            %If train passes through the departure gate...
            if departureVal > positiveThreshold
                departTimer=tic;
                trainPosition = 'departure';  
                


            %If train passes through the approach gate...
            elseif approachVal > positiveThreshold
                approachTimer=tic;
                a.motorSpeed(1,speedSlow);
                play(player);
                play(player2);
                trainPosition = 'approach';
                

                
            end
        end  
end
%Ends all sounds and stop train at the end of the Timed clock cycle
stop(player);
stop(player2);
stop(player3);
a.motorSpeed(1,0);
disp('Times up');
